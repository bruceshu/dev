// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youme_comm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "youme_comm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace YOUMECommonProtocol {

void protobuf_ShutdownFile_youme_5fcomm_2eproto() {
  delete NameValue::default_instance_;
  delete MsgComment::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_youme_5fcomm_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_youme_5fcomm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  NameValue::default_instance_ = new NameValue();
  MsgComment::default_instance_ = new MsgComment();
  NameValue::default_instance_->InitAsDefaultInstance();
  MsgComment::default_instance_->InitAsDefaultInstance();
  ::youmecommon::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_youme_5fcomm_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_youme_5fcomm_2eproto_once_);
void protobuf_AddDesc_youme_5fcomm_2eproto() {
  ::youmecommon::protobuf::GoogleOnceInit(&protobuf_AddDesc_youme_5fcomm_2eproto_once_,
                 &protobuf_AddDesc_youme_5fcomm_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_youme_5fcomm_2eproto {
  StaticDescriptorInitializer_youme_5fcomm_2eproto() {
    protobuf_AddDesc_youme_5fcomm_2eproto();
  }
} static_descriptor_initializer_youme_5fcomm_2eproto_;
#endif
bool VALUE_TYPE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

bool DevicePlatform_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

bool DistrictLevel_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int NameValue::kNameFieldNumber;
const int NameValue::kValueFieldNumber;
const int NameValue::kValueTypeFieldNumber;
#endif  // !_MSC_VER

NameValue::NameValue()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YOUMECommonProtocol.NameValue)
}

void NameValue::InitAsDefaultInstance() {
}

NameValue::NameValue(const NameValue& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YOUMECommonProtocol.NameValue)
}

void NameValue::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  value_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NameValue::~NameValue() {
  // @@protoc_insertion_point(destructor:YOUMECommonProtocol.NameValue)
  SharedDtor();
}

void NameValue::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void NameValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NameValue& NameValue::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_youme_5fcomm_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_youme_5fcomm_2eproto();
#endif
  return *default_instance_;
}

NameValue* NameValue::default_instance_ = NULL;

NameValue* NameValue::New(::youmecommon::protobuf::Arena* arena) const {
  NameValue* n = new NameValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NameValue::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    value_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NameValue::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YOUMECommonProtocol.NameValue)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_value_type;
        break;
      }

      // required .YOUMECommonProtocol.VALUE_TYPE value_type = 3;
      case 3: {
        if (tag == 24) {
         parse_value_type:
          int value;
          DO_((::youmecommon::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::youmecommon::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YOUMECommonProtocol::VALUE_TYPE_IsValid(value)) {
            set_value_type(static_cast< ::YOUMECommonProtocol::VALUE_TYPE >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YOUMECommonProtocol.NameValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YOUMECommonProtocol.NameValue)
  return false;
#undef DO_
}

void NameValue::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YOUMECommonProtocol.NameValue)
  // required string name = 1;
  if (has_name()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // required .YOUMECommonProtocol.VALUE_TYPE value_type = 3;
  if (has_value_type()) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->value_type(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YOUMECommonProtocol.NameValue)
}

int NameValue::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (has_value_type()) {
    // required .YOUMECommonProtocol.VALUE_TYPE value_type = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->value_type());
  }

  return total_size;
}
int NameValue::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string value = 2;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::StringSize(
        this->value());

    // required .YOUMECommonProtocol.VALUE_TYPE value_type = 3;
    total_size += 1 +
      ::youmecommon::protobuf::internal::WireFormatLite::EnumSize(this->value_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NameValue::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const NameValue*>(&from));
}

void NameValue::MergeFrom(const NameValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (from.has_value_type()) {
      set_value_type(from.value_type());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void NameValue::CopyFrom(const NameValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void NameValue::Swap(NameValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameValue::InternalSwap(NameValue* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(value_type_, other->value_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string NameValue::GetTypeName() const {
  return "YOUMECommonProtocol.NameValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NameValue

// required string name = 1;
bool NameValue::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NameValue::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void NameValue::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void NameValue::clear_name() {
  name_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& NameValue::name() const {
  // @@protoc_insertion_point(field_get:YOUMECommonProtocol.NameValue.name)
  return name_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NameValue::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMECommonProtocol.NameValue.name)
}
 void NameValue::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMECommonProtocol.NameValue.name)
}
 void NameValue::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMECommonProtocol.NameValue.name)
}
 ::std::string* NameValue::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:YOUMECommonProtocol.NameValue.name)
  return name_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NameValue::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NameValue::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:YOUMECommonProtocol.NameValue.name)
}

// required string value = 2;
bool NameValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NameValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void NameValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void NameValue::clear_value() {
  value_.ClearToEmptyNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& NameValue::value() const {
  // @@protoc_insertion_point(field_get:YOUMECommonProtocol.NameValue.value)
  return value_.GetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NameValue::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YOUMECommonProtocol.NameValue.value)
}
 void NameValue::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YOUMECommonProtocol.NameValue.value)
}
 void NameValue::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YOUMECommonProtocol.NameValue.value)
}
 ::std::string* NameValue::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:YOUMECommonProtocol.NameValue.value)
  return value_.MutableNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NameValue::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NameValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:YOUMECommonProtocol.NameValue.value)
}

// required .YOUMECommonProtocol.VALUE_TYPE value_type = 3;
bool NameValue::has_value_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NameValue::set_has_value_type() {
  _has_bits_[0] |= 0x00000004u;
}
void NameValue::clear_has_value_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void NameValue::clear_value_type() {
  value_type_ = 0;
  clear_has_value_type();
}
 ::YOUMECommonProtocol::VALUE_TYPE NameValue::value_type() const {
  // @@protoc_insertion_point(field_get:YOUMECommonProtocol.NameValue.value_type)
  return static_cast< ::YOUMECommonProtocol::VALUE_TYPE >(value_type_);
}
 void NameValue::set_value_type(::YOUMECommonProtocol::VALUE_TYPE value) {
  assert(::YOUMECommonProtocol::VALUE_TYPE_IsValid(value));
  set_has_value_type();
  value_type_ = value;
  // @@protoc_insertion_point(field_set:YOUMECommonProtocol.NameValue.value_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MsgComment::kCommentFieldNumber;
#endif  // !_MSC_VER

MsgComment::MsgComment()
  : ::youmecommon::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YOUMECommonProtocol.MsgComment)
}

void MsgComment::InitAsDefaultInstance() {
}

MsgComment::MsgComment(const MsgComment& from)
  : ::youmecommon::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YOUMECommonProtocol.MsgComment)
}

void MsgComment::SharedCtor() {
  ::youmecommon::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgComment::~MsgComment() {
  // @@protoc_insertion_point(destructor:YOUMECommonProtocol.MsgComment)
  SharedDtor();
}

void MsgComment::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MsgComment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MsgComment& MsgComment::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_youme_5fcomm_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_youme_5fcomm_2eproto();
#endif
  return *default_instance_;
}

MsgComment* MsgComment::default_instance_ = NULL;

MsgComment* MsgComment::New(::youmecommon::protobuf::Arena* arena) const {
  MsgComment* n = new MsgComment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgComment::Clear() {
  comment_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::youmecommon::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgComment::MergePartialFromCodedStream(
    ::youmecommon::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::youmecommon::protobuf::uint32 tag;
  ::youmecommon::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::youmecommon::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:YOUMECommonProtocol.MsgComment)
  for (;;) {
    ::std::pair< ::youmecommon::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::youmecommon::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .YOUMECommonProtocol.NameValue comment = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_comment:
          DO_(::youmecommon::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_comment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_comment;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::youmecommon::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::youmecommon::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::youmecommon::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YOUMECommonProtocol.MsgComment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YOUMECommonProtocol.MsgComment)
  return false;
#undef DO_
}

void MsgComment::SerializeWithCachedSizes(
    ::youmecommon::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YOUMECommonProtocol.MsgComment)
  // repeated .YOUMECommonProtocol.NameValue comment = 1;
  for (unsigned int i = 0, n = this->comment_size(); i < n; i++) {
    ::youmecommon::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->comment(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:YOUMECommonProtocol.MsgComment)
}

int MsgComment::ByteSize() const {
  int total_size = 0;

  // repeated .YOUMECommonProtocol.NameValue comment = 1;
  total_size += 1 * this->comment_size();
  for (int i = 0; i < this->comment_size(); i++) {
    total_size +=
      ::youmecommon::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->comment(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgComment::CheckTypeAndMergeFrom(
    const ::youmecommon::protobuf::MessageLite& from) {
  MergeFrom(*::youmecommon::protobuf::down_cast<const MsgComment*>(&from));
}

void MsgComment::MergeFrom(const MsgComment& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  comment_.MergeFrom(from.comment_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MsgComment::CopyFrom(const MsgComment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgComment::IsInitialized() const {

  if (!::youmecommon::protobuf::internal::AllAreInitialized(this->comment())) return false;
  return true;
}

void MsgComment::Swap(MsgComment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgComment::InternalSwap(MsgComment* other) {
  comment_.UnsafeArenaSwap(&other->comment_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MsgComment::GetTypeName() const {
  return "YOUMECommonProtocol.MsgComment";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgComment

// repeated .YOUMECommonProtocol.NameValue comment = 1;
int MsgComment::comment_size() const {
  return comment_.size();
}
void MsgComment::clear_comment() {
  comment_.Clear();
}
const ::YOUMECommonProtocol::NameValue& MsgComment::comment(int index) const {
  // @@protoc_insertion_point(field_get:YOUMECommonProtocol.MsgComment.comment)
  return comment_.Get(index);
}
::YOUMECommonProtocol::NameValue* MsgComment::mutable_comment(int index) {
  // @@protoc_insertion_point(field_mutable:YOUMECommonProtocol.MsgComment.comment)
  return comment_.Mutable(index);
}
::YOUMECommonProtocol::NameValue* MsgComment::add_comment() {
  // @@protoc_insertion_point(field_add:YOUMECommonProtocol.MsgComment.comment)
  return comment_.Add();
}
::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >*
MsgComment::mutable_comment() {
  // @@protoc_insertion_point(field_mutable_list:YOUMECommonProtocol.MsgComment.comment)
  return &comment_;
}
const ::youmecommon::protobuf::RepeatedPtrField< ::YOUMECommonProtocol::NameValue >&
MsgComment::comment() const {
  // @@protoc_insertion_point(field_list:YOUMECommonProtocol.MsgComment.comment)
  return comment_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace YOUMECommonProtocol

// @@protoc_insertion_point(global_scope)
