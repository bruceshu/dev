#
project(YouMeCommon)

cmake_minimum_required(VERSION 2.8)

SET (CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}")


set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../bin)

IF(__ANDROID__)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android/${CMAKE_BUILD_TYPE})
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android/${CMAKE_BUILD_TYPE})
	ADD_DEFINITIONS(-DOS_ANDROID)
ELSEIF (__ANDROID__X86)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android_X86/${CMAKE_BUILD_TYPE})
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android_X86/${CMAKE_BUILD_TYPE})
	ADD_DEFINITIONS(-DOS_ANDROID)
ELSEIF (__ANDROID__X86_64)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android_X86_64/${CMAKE_BUILD_TYPE})
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android_X86_64/${CMAKE_BUILD_TYPE})
	ADD_DEFINITIONS(-DOS_ANDROID)
ELSEIF (__Linux__)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Linux/${YOUMECOMMON_ABI})
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Linux/${YOUMECOMMON_ABI})
	ADD_DEFINITIONS(-DOS_LINUX)
ELSEIF (__ANDROID__V7)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android_V7/${CMAKE_BUILD_TYPE})
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android_V7/${CMAKE_BUILD_TYPE})
	ADD_DEFINITIONS(-DOS_ANDROID)
ELSEIF (__ANDROID__V8)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android_V8/${CMAKE_BUILD_TYPE})
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/Android_V8/${CMAKE_BUILD_TYPE})
	ADD_DEFINITIONS(-DOS_ANDROID)
ELSEIF (WIN32) 
	if (UN_REAL)
		set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/WIN64/${CMAKE_BUILD_TYPE})
		set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/WIN64/${CMAKE_BUILD_TYPE})
	else(UN_REAL)
		if(WIN64)
			set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/WIN64_2013/${CMAKE_BUILD_TYPE})
			set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/WIN64_2013/${CMAKE_BUILD_TYPE})
		else(WIN64)
			set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/WIN32/${CMAKE_BUILD_TYPE})
			set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/WIN32/${CMAKE_BUILD_TYPE})
		endif(WIN64)
	endif(UN_REAL)

	if (WIN32_2015)
		set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/WIN32_2015/${CMAKE_BUILD_TYPE})
		set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/WIN32_2015/${CMAKE_BUILD_TYPE})
	endif(WIN32_2015)

	ADD_DEFINITIONS(-DOS_WIN32)

ELSEIF (__OSX__)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/MAC/${CMAKE_BUILD_TYPE})
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/MAC/${CMAKE_BUILD_TYPE})
	ADD_DEFINITIONS(-DOS_OSX)
ELSEIF (__IOS__)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/IOS/${CMAKE_BUILD_TYPE})
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/IOS/${CMAKE_BUILD_TYPE})
	ADD_DEFINITIONS(-DOS_IOS)
ELSEIF (__IOSSIMULATOR__)
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/IOSSIMULATOR/${CMAKE_BUILD_TYPE})
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../lib/IOSSIMULATOR/${CMAKE_BUILD_TYPE})
	ADD_DEFINITIONS(-DOS_IOSSIMULATOR)
ENDIF(__ANDROID__)


add_subdirectory(src/YouMeCommon)







